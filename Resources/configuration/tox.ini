[tox]
envlist = 
    py{39,310,311,312}
    flake8
    mypy
    bandit
    safety
    coverage
    docs
isolated_build = true
skip_missing_interpreters = true

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311, flake8, mypy, bandit, safety, coverage
    3.12: py312

[testenv]
deps = 
    pytest>=7.4.0
    pytest-cov>=4.1.0
    pytest-mock>=3.11.0
    pytest-asyncio>=0.21.0
    pytest-xdist>=3.3.0
    pytest-benchmark>=4.0.0
    pytest-timeout>=2.1.0
    hypothesis>=6.82.0
    factory-boy>=3.3.0
    coverage[toml]>=7.2.0
    -r{toxinidir}/requirements.txt
setenv =
    PYTHONPATH = {toxinidir}
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
commands = 
    pytest {posargs:Files/tests} \
        --cov=Files/src \
        --cov-report=term-missing \
        --cov-report=html:{toxworkdir}/htmlcov-{envname} \
        --cov-report=xml:{toxworkdir}/coverage-{envname}.xml \
        --junitxml={toxworkdir}/junit-{envname}.xml \
        -v

[testenv:unit]
deps = {[testenv]deps}
commands = 
    pytest Files/tests/test_main.py Files/tests/test_data.py \
        --cov=Files/src \
        --cov-report=term-missing \
        --cov-report=html:{toxworkdir}/htmlcov-unit \
        --cov-report=xml:{toxworkdir}/coverage-unit.xml \
        -v

[testenv:integration] 
deps = {[testenv]deps}
commands = 
    pytest Files/tests/test_integration.py \
        --cov=Files/src \
        --cov-report=term-missing \
        --cov-report=html:{toxworkdir}/htmlcov-integration \
        --cov-report=xml:{toxworkdir}/coverage-integration.xml \
        -v

[testenv:api]
deps = {[testenv]deps}
commands = 
    pytest Files/tests/test_api.py \
        --cov=Files/src \
        --cov-report=term-missing \
        --cov-report=html:{toxworkdir}/htmlcov-api \
        --cov-report=xml:{toxworkdir}/coverage-api.xml \
        -v

[testenv:performance]
deps = {[testenv]deps}
commands = 
    pytest Files/tests/test_performance.py \
        -m "not slow" \
        --benchmark-only \
        --benchmark-json={toxworkdir}/benchmark-results.json \
        -v

[testenv:stress]
deps = {[testenv]deps}
commands = 
    pytest Files/tests/test_performance.py \
        -m "slow" \
        --benchmark-json={toxworkdir}/stress-test-results.json \
        --timeout=1800 \
        -v

[testenv:flake8]
deps = 
    flake8>=6.0.0
    flake8-docstrings>=1.7.0
    flake8-import-order>=0.18.0
    flake8-bugbear>=23.7.0
    flake8-comprehensions>=3.14.0
commands = 
    flake8 Files/src Files/tests \
        --max-line-length=100 \
        --extend-ignore=E203,W503,D100,D101,D102,D103,D104,D105

[testenv:mypy]
deps = 
    mypy>=1.5.0
    types-requests>=2.31.0
    types-redis>=4.6.0
    -r{toxinidir}/requirements.txt
commands = 
    mypy Files/src --ignore-missing-imports --no-strict-optional

[testenv:bandit]
deps = 
    bandit[toml]>=1.7.0
commands = 
    bandit -r Files/src -f json -o {toxworkdir}/bandit-report.json
    bandit -r Files/src

[testenv:safety]
deps = 
    safety>=2.3.0
commands = 
    safety check --json --output {toxworkdir}/safety-report.json
    safety check

[testenv:coverage]
deps = 
    coverage[toml]>=7.2.0
    {[testenv]deps}
setenv = 
    COVERAGE_FILE = {toxworkdir}/.coverage
commands = 
    coverage erase
    pytest Files/tests \
        --cov=Files/src \
        --cov-append \
        --cov-report=term-missing \
        --cov-report=html:{toxworkdir}/htmlcov-combined \
        --cov-report=xml:{toxworkdir}/coverage-combined.xml \
        --cov-fail-under=80 \
        -v
    coverage report
    coverage html
    coverage xml

[testenv:docs]
deps = 
    sphinx>=7.1.0
    sphinx-rtd-theme>=1.3.0
    myst-parser>=2.0.0
    sphinx-autodoc-typehints>=1.24.0
    -r{toxinidir}/requirements.txt
commands = 
    sphinx-build -W -b html Files/docs {toxworkdir}/docs

[testenv:format]
deps = 
    black>=23.7.0
    isort>=5.12.0
commands = 
    black Files/src Files/tests
    isort Files/src Files/tests

[testenv:format-check]
deps = 
    black>=23.7.0
    isort>=5.12.0
commands = 
    black --check --diff Files/src Files/tests
    isort --check-only --diff Files/src Files/tests

[testenv:clean]
deps = 
    coverage[toml]>=7.2.0
commands = 
    coverage erase
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('Files.egg-info', ignore_errors=True)"

[testenv:build]
deps = 
    build>=0.10.0
    twine>=4.0.0
commands = 
    python -m build
    twine check dist/*

[flake8]
max-line-length = 100
extend-ignore = E203, W503, D100, D101, D102, D103, D104, D105
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv,
    env
import-order-style = google
application-import-names = Files
docstring-convention = google

[coverage:run]
source = Files/src
parallel = true
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = true
skip_covered = false
sort = Cover

[coverage:html]
directory = htmlcov
title = Enterprise Credit Risk Intelligence Platform Coverage Report

[coverage:xml]
output = coverage.xml